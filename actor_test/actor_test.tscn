[gd_scene load_steps=5 format=3 uid="uid://bt818sjuyr51y"]

[ext_resource type="Texture2D" uid="uid://bude4na0hnosm" path="res://icon.svg" id="2_my3qk"]

[sub_resource type="GDScript" id="GDScript_opxtt"]
script/source = "extends Actor



# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta: float) -> void:
	var thrust:Vector2 = constant_force
	$Thrust.points = [Vector2.ZERO,thrust]
	$Velocity.points = [Vector2.ZERO, linear_velocity]
	
	var mpos:Vector2 = get_viewport().get_mouse_position()
	linear_target=mpos
	$Target.points = [Vector2.ZERO, linear_target-position]
	
	
	
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_opakp"]
size = Vector2(32, 32)

[sub_resource type="GDScript" id="GDScript_d57ax"]
script/source = "extends Actor


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	var thrust:float = constant_torque/1000
	var thrust_points:PackedVector2Array = [Vector2.RIGHT*64]
	for n:float in range(floor(abs(thrust)*100)):
		thrust_points.push_back(Vector2.RIGHT.rotated(sign(thrust)*n/100.0)*64)
	$Thrust.points = thrust_points
	
	var velocity_points:PackedVector2Array = [Vector2.RIGHT*60]
	for n:float in range(floor(abs(angular_velocity)*100)):
		velocity_points.push_back(Vector2.RIGHT.rotated(sign(angular_velocity)*n/100.0)*60)
	$Velocity.points = velocity_points
	
	var mpos:Vector2 = get_viewport().get_mouse_position()
	angular_target = (mpos-position).angle()
	$Target.points = [Vector2.ZERO, (mpos-position).rotated(-rotation)]
"

[node name="ActorTest" type="Node2D"]

[node name="LinearTestActor" type="RigidBody2D" parent="."]
position = Vector2(512, 512)
collision_layer = 0
collision_mask = 0
script = SubResource("GDScript_opxtt")
linear_control_mode = 2
linear_brake = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="LinearTestActor"]
shape = SubResource("RectangleShape2D_opakp")

[node name="Sprite2D" type="Sprite2D" parent="LinearTestActor"]
scale = Vector2(0.25, 0.25)
texture = ExtResource("2_my3qk")

[node name="Target" type="Line2D" parent="LinearTestActor"]
points = PackedVector2Array(0, 0, 100, -80)
width = 2.0
default_color = Color(0, 1, 0, 1)

[node name="Velocity" type="Line2D" parent="LinearTestActor"]
points = PackedVector2Array(0, 0, 100, -80)
width = 2.0
default_color = Color(1, 0, 0, 1)

[node name="Thrust" type="Line2D" parent="LinearTestActor"]
points = PackedVector2Array(0, 0, 100, -80)
width = 2.0
default_color = Color(0, 0, 1, 1)

[node name="AngularTestActor" type="RigidBody2D" parent="."]
visible = false
position = Vector2(512, 512)
collision_layer = 0
collision_mask = 0
script = SubResource("GDScript_d57ax")
max_angular_thrust = 1000.0
angular_control_mode = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="AngularTestActor"]
shape = SubResource("RectangleShape2D_opakp")

[node name="Sprite2D" type="Sprite2D" parent="AngularTestActor"]
scale = Vector2(0.25, 0.25)
texture = ExtResource("2_my3qk")

[node name="Target" type="Line2D" parent="AngularTestActor"]
points = PackedVector2Array(0, 0, 100, -80)
width = 2.0
default_color = Color(0, 1, 0, 1)

[node name="Velocity" type="Line2D" parent="AngularTestActor"]
points = PackedVector2Array(0, 0, 100, -80)
width = 2.0
default_color = Color(1, 0, 0, 1)

[node name="Thrust" type="Line2D" parent="AngularTestActor"]
points = PackedVector2Array(0, 0, 100, -80)
width = 2.0
default_color = Color(0, 0, 1, 1)

[node name="Line2D" type="Line2D" parent="AngularTestActor"]
points = PackedVector2Array(0, 0, 64, 0)
width = 2.0
