[gd_scene load_steps=7 format=3 uid="uid://b4v2b4cphju7v"]

[ext_resource type="Theme" uid="uid://d0ifc4kse0sbj" path="res://ui/theme/theme.tres" id="1_8pghh"]

[sub_resource type="GDScript" id="GDScript_2tfo1"]
script/source = "extends PanelContainer


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass

func _input(event: InputEvent) -> void:
	if(event.is_action_pressed(\"debug\")):
		visible = !visible
"

[sub_resource type="GDScript" id="GDScript_6krc4"]
script/source = "extends CheckButton

func _on_toggled(toggled_on: bool) -> void:
	var player:Player = get_tree().get_first_node_in_group('Players')
	if(is_instance_valid(player)):
		player.immortal = toggled_on
"

[sub_resource type="GDScript" id="GDScript_7qte2"]
script/source = "extends PanelContainer


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	var pickupspawner:Node = get_tree().root.find_child('PickupSpawner',true,false)
	if(!is_instance_valid(pickupspawner)):
		return
	for scene:PackedScene in pickupspawner.pickup_list:
		var button:Button = Button.new()
		button.text = scene.get_state().get_node_name(0)
		button.pressed.connect(_pickup.bind(scene))
		$VBoxContainer/PanelContainer/VBoxContainer.add_child(button)


func _pickup(scene:PackedScene):
	var player:Player = get_tree().get_first_node_in_group('Players')
	if(is_instance_valid(player)):
		var pick:Pickup = scene.instantiate()
		pick.picked_up.emit(player)
		pick.queue_free()

func _on_button_pressed() -> void:
	$VBoxContainer/PanelContainer.visible = ! $VBoxContainer/PanelContainer.visible
"

[sub_resource type="GDScript" id="GDScript_k4h56"]
script/source = "extends PanelContainer

var mod_buttons:Dictionary

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	var player:Player = get_tree().get_first_node_in_group('Players')
	if(is_instance_valid(player)):
		player.mod_added.connect(_on_player_mod_added)
		player.mod_removed.connect(_on_player_mod_removed)
		for mod:Modifier in player.modifiers.values():
			_on_player_mod_added(mod)

func _on_player_mod_added(mod:Modifier)->void:
	if(mod is PlayerAbility):
		var button:Button = Button.new()
		button.text = mod.ability_name
		button.pressed.connect(_remove.bind(mod))
		$VBoxContainer/PanelContainer/VBoxContainer.add_child(button)
		mod_buttons[mod]=button

func _on_player_mod_removed(mod:Modifier)->void:
	if(mod_buttons.has(mod)):
		mod_buttons[mod].queue_free()
		mod_buttons.erase(mod)

func _remove(ability:PlayerAbility)->void:
	if(is_instance_valid(ability) && ability.is_active):
		ability.get_parent().remove_modifier(ability.mod_name)
	elif(mod_buttons.has(ability)):
		mod_buttons[ability].queue_free()
		mod_buttons.erase(ability)

func _on_button_pressed() -> void:
	$VBoxContainer/PanelContainer.visible = ! $VBoxContainer/PanelContainer.visible
"

[sub_resource type="GDScript" id="GDScript_okadf"]
script/source = "extends PanelContainer



# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	var enemyspawner:Node = get_tree().root.find_child('EnemySpawner',true,false)
	if(!is_instance_valid(enemyspawner)):
		return
	for scene:PackedScene in enemyspawner.enemy_list:
		var button:Button = Button.new()
		button.text = scene.get_state().get_node_name(0)
		button.pressed.connect(_spawn.bind(scene))
		$VBoxContainer/PanelContainer/VBoxContainer.add_child(button)


func _spawn(scene:PackedScene):
	var enemyspawner:Node = get_tree().root.find_child('EnemySpawner',true,false)
	if(is_instance_valid(enemyspawner)):
		enemyspawner.spawn(scene)

func _on_button_pressed() -> void:
	$VBoxContainer/PanelContainer.visible = ! $VBoxContainer/PanelContainer.visible
"

[node name="DebugMenu" type="PanelContainer"]
process_mode = 3
offset_right = 128.0
offset_bottom = 169.0
theme = ExtResource("1_8pghh")
script = SubResource("GDScript_2tfo1")

[node name="PanelContainer" type="PanelContainer" parent="."]
layout_mode = 2
theme_type_variation = &"DarkPanel"

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Immortal" type="CheckButton" parent="PanelContainer/VBoxContainer"]
layout_mode = 2
text = "Immortal"
script = SubResource("GDScript_6krc4")

[node name="Pickup" type="PanelContainer" parent="PanelContainer/VBoxContainer"]
layout_mode = 2
script = SubResource("GDScript_7qte2")

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/VBoxContainer/Pickup"]
layout_mode = 2
theme_override_constants/separation = 0

[node name="Button" type="Button" parent="PanelContainer/VBoxContainer/Pickup/VBoxContainer"]
layout_mode = 2
toggle_mode = true
text = "Pickup"
flat = true

[node name="PanelContainer" type="PanelContainer" parent="PanelContainer/VBoxContainer/Pickup/VBoxContainer"]
visible = false
layout_mode = 2
theme_type_variation = &"DarkPanel"

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/VBoxContainer/Pickup/VBoxContainer/PanelContainer"]
layout_mode = 2

[node name="Remove" type="PanelContainer" parent="PanelContainer/VBoxContainer"]
layout_mode = 2
script = SubResource("GDScript_k4h56")

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/VBoxContainer/Remove"]
layout_mode = 2
theme_override_constants/separation = 0

[node name="Button" type="Button" parent="PanelContainer/VBoxContainer/Remove/VBoxContainer"]
layout_mode = 2
toggle_mode = true
text = "Remove"
flat = true

[node name="PanelContainer" type="PanelContainer" parent="PanelContainer/VBoxContainer/Remove/VBoxContainer"]
visible = false
layout_mode = 2
theme_type_variation = &"DarkPanel"

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/VBoxContainer/Remove/VBoxContainer/PanelContainer"]
layout_mode = 2

[node name="Spawn" type="PanelContainer" parent="PanelContainer/VBoxContainer"]
layout_mode = 2
script = SubResource("GDScript_okadf")

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/VBoxContainer/Spawn"]
layout_mode = 2
theme_override_constants/separation = 0

[node name="Button" type="Button" parent="PanelContainer/VBoxContainer/Spawn/VBoxContainer"]
layout_mode = 2
toggle_mode = true
text = "Spawn"
flat = true

[node name="PanelContainer" type="PanelContainer" parent="PanelContainer/VBoxContainer/Spawn/VBoxContainer"]
visible = false
layout_mode = 2
theme_type_variation = &"DarkPanel"

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/VBoxContainer/Spawn/VBoxContainer/PanelContainer"]
layout_mode = 2

[connection signal="toggled" from="PanelContainer/VBoxContainer/Immortal" to="PanelContainer/VBoxContainer/Immortal" method="_on_toggled"]
[connection signal="pressed" from="PanelContainer/VBoxContainer/Pickup/VBoxContainer/Button" to="PanelContainer/VBoxContainer/Pickup" method="_on_button_pressed"]
[connection signal="pressed" from="PanelContainer/VBoxContainer/Remove/VBoxContainer/Button" to="PanelContainer/VBoxContainer/Remove" method="_on_button_pressed"]
[connection signal="pressed" from="PanelContainer/VBoxContainer/Spawn/VBoxContainer/Button" to="PanelContainer/VBoxContainer/Spawn" method="_on_button_pressed"]
